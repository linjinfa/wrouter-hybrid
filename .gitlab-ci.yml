stages:
  - build
  - notify
  
variables:
  wxRoboKey: "bdf05e4e-d818-45d3-acc2-c1fe941bb6a2"
  resultSuccessJsonStr: '{"msgtype":"markdown","markdown":{"content":"${GITLAB_USER_LOGIN}\n【WRouter-Hybrid】<font color=\"warning\">${CI_PROJECT_NAME}</font>执行CI构建成功。\n部署人：<font color=\"comment\">${GITLAB_USER_LOGIN}</font>\n构建分支：<font color=\"comment\">${CI_COMMIT_REF_NAME}</font>\n部署日志：[点击查看](${CI_PIPELINE_URL})"}}'
  resultFailureJsonStr: '{"msgtype":"markdown","markdown":{"content":"${GITLAB_USER_LOGIN}\n【WRouter-Hybrid】<font color=\"warning\">${CI_PROJECT_NAME}</font>执行CI构建失败。\n部署人：<font color=\"comment\">${GITLAB_USER_LOGIN}</font>\n失败流程：<font color=\"comment\">${CI_JOB_STAGE}</font>\n部署日志：[点击查看](${CI_PIPELINE_URL})"}}'

cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - node_modules
    
.base:
  image: node:lts
  tags:
    - autotest

build:
  stage: build
  extends: .base
  script:
    - echo 'build dhdhhhhh'
    # - npm config set registry http://npm.weimob.com
    # - npm install
    # - npm install weimob-gitlab-ci-tools@latest -g --registry http://npm.weimob.com
    # - npm run build
  artifacts:
      expire_in: 1 day
      paths:
        - es/
  only:
    - master
    
succ:
  stage: notify
  extends: .base
  cache: {}
  script:
    # - echo "${resultJsonStr}"
    - curl "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=${wxRoboKey}"
        -H "Content-Type:application/json"
        -d "${resultFailureJsonStr}"
  when: on_success

fail:
  stage: notify
  extends: .base
  cache: {}
  script:
    # - echo "${resultJsonStr}"
    - curl "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=${wxRoboKey}"
        -H "Content-Type:application/json"
        -d "${resultFailureJsonStr}"
  when: on_failure






